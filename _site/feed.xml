<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PRATIK SHAH</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 09 Apr 2016 15:05:56 -0500</pubDate>
    <lastBuildDate>Sat, 09 Apr 2016 15:05:56 -0500</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>Blog With Jekyll</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Jekyll is a static site generator that is written in ruby. Jekyll takes text files and renders them into HTML page. If you are looking for a simple web page or blog without having a database or maintaining a lot of code then Jekyll is for you. Another bonus for Jekyll is that you can host your page on GitHub pages.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;p&gt;Installing Jekyll is just like installing any ruby gem. If you are on windows you will need to get ruby so check out &lt;a href=&quot;http://rubyinstaller.org/&quot;&gt;ruby installer&lt;/a&gt;. I will be installing on a mac but for further information on how to install look at the &lt;a href=&quot;https://jekyllrb.com/docs/installation/&quot;&gt;Jekyll docs&lt;/a&gt;. In your console type &lt;code class=&quot;highlighter-rouge&quot;&gt;gem install jekyll&lt;/code&gt; and wait till it installs (restart your console after). If installed successfully it will say &lt;code class=&quot;highlighter-rouge&quot;&gt;Successfully installed jekyll-version#&lt;/code&gt; and to double check installation type &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll –v&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;creating-a-new-project&quot;&gt;Creating a New Project&lt;/h3&gt;

&lt;p&gt;Creating a new project is just as easy as installing (I hope it is for you). To create a new project in the command line at whatever root directory you want (I did mine on desktop for demo purposes) type &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new your-project-name&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;viewing-the-files-created-here-is-a-rundown-of-what-the-filefolders-do&quot;&gt;Viewing the files created here is a rundown of what the file/folders do:&lt;/h4&gt;
&lt;ul class=&quot;blg-lists&quot;&gt;
  &lt;li&gt;config.yml – is where you can configure all the configuration data&lt;/li&gt;
  &lt;li&gt;_includes – contains partials which can be reused and rendered in html templates in layouts&lt;/li&gt;
  &lt;li&gt;_layouts – contains main page templates such as for a blog post or homepage&lt;/li&gt;
  &lt;li&gt;_posts – contains markdown files for blog posts. If you don’t know markdown here is a cheat sheet and an environment you can practice in.&lt;/li&gt;
  &lt;li&gt;_sass – is a scripting language for css to make things more efficient and jekyll offers this.&lt;/li&gt;
  &lt;li&gt;css – contains the main stylesheet that is in Sass but if you just want to use plain css you can rename main.scss to main.css.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In order to view the webpage it needs to be hosted on a server and Jekyll provides one for us through the command line. Navigate to the root folder of the project and type &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;.  Once server is running copy the server address (2nd to last line) and paste it in your browser and whala! You now have a website. If you look at your project folder you will see a new folder that was created called _site. This is where the site’s assets will be placed and what you will need to host the page on a webserver. One important thing to remember is that folders beginning with an underscore will be compiled but will not be copied over to the _site folder. If you want other assets like videos, images or sounds make sure the folder does not start with an underscore.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;configure-project&quot;&gt;Configure Project&lt;/h3&gt;

&lt;p&gt;To configure your project you will have to edit the &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file. The &lt;a href=&quot;https://jekyllrb.com/docs/configuration/&quot;&gt;Jekyll documentation&lt;/a&gt; provides a full list of commands that can be configured. Go through and give your site/blog a title, email, and description. Set the url to the host domain name you will use to host the live site on and you can also set your twitter/github usernames if you want. There is one more configuration we need to manually add under build settings called &lt;a href=&quot;https://jekyllrb.com/docs/permalinks/&quot;&gt;permalink&lt;/a&gt; and it defines how the file path is displayed. View the docs for a selection of built in settings but I like either none or /: categories/:title. Type &lt;code class=&quot;highlighter-rouge&quot;&gt;permalink: none&lt;/code&gt;or the custom permalink &lt;code class=&quot;highlighter-rouge&quot;&gt;/:categories/:title&lt;/code&gt; restart your server.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;yaml&quot;&gt;Yaml&lt;/h3&gt;

&lt;p&gt;In your text editor go to your posts and look at the sample markdown file. You will notice a block of text between the dashes. This is called a yaml (ya-mull) front matter and its basically creating and assigning variables to be used within the file. Change the title value to whatever you want your post title to be. The date variable is what Jekyll uses to sort your blog posts in order and it can be changed if you would like. You can also specify categories for your post; for multiple categories use spaces. You can also add an author by adding an &lt;code class=&quot;highlighter-rouge&quot;&gt;author: name&lt;/code&gt; in the yaml front matter. After that you can get rid of all the default content and place one of your own. I am going to use a lorem ipsum generator to fill in my content. Save once you are done and have a look at your post.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-liquid-template-system&quot;&gt;The Liquid Template System&lt;/h3&gt;

&lt;p&gt;Your entire project will be made up of either posts or pages. Jekyll uses liquid templates to render a model for each page or post and these templates are stored in the layouts folder. The default.html file provides the html layout and has handles (the brackets) which contain data to render or logic to be performed. Handles with percent signs (%) after it perform logic/calculations while double handles stands for render content. The handles are used throughout rendering partials from includes folder, layouts and posts.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Let’s edit how the format the way we show our blog posts on the homepage. Go to the index.html file and inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; tags move the h2 tag up above the span tag. In the span tag add &lt;code class=&quot;highlighter-rouge&quot;&gt;by:  on&lt;/code&gt;. So we can display the author’s name. Next add a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tag after the span tags and add this line in between them ``. Reload the page and see the difference! We just added an author to each post and the first 50 words of the post.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;adding-images&quot;&gt;Adding Images&lt;/h3&gt;
&lt;p&gt;We can easily embed and image to our blog post. First grab and image and create a new folder called &lt;code class=&quot;highlighter-rouge&quot;&gt;img&lt;/code&gt; at the root path of the project folder and place the image inside. Go to post.html under layouts folder and type the below code right after the ending header tag.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now go back to your first post in posts folder and inside the yaml front matter block add &lt;code class=&quot;highlighter-rouge&quot;&gt;image: your-image-name.file-extension&lt;/code&gt;. I added a bit of styling to center the image. Refresh the site and check it out a picture. We added an if statement so for posts that do not have an image the code is skipped and not rendered.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;refactor-by-creating-default-variables&quot;&gt;Refactor by Creating Default Variables&lt;/h3&gt;
&lt;p&gt;When creating new posts over and over again defining the yaml front matter variables again and again can be tiresome but Jekyll lets you configure the default values in the config.yml file copy the code below to your config file. What we are doing is defining values that should automatically be loaded in any post template so that we don’t have to keep writing the yaml block. Next, go to the post and delete the author, category and layout we do not need them anymore. Restart your sever and everything should be the same as it was. You can always override the defaults by specifying the values in the yaml block in the post.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;creating-a-new-page&quot;&gt;Creating a New Page&lt;/h3&gt;
&lt;p&gt;Creating a new page is pretty simple. Let’s create a contact page for our blog. In the root folder of your project create a new file called contact.md or contact.html it doesn’t matter Jekyll will render both as long as you have the front matter at the top of the page; I will use markdown. See below how I did the contact page. Now when you refresh the page you should see a new link up top next to navigation called contact.  I have the &lt;code class=&quot;highlighter-rouge&quot;&gt;layout: page&lt;/code&gt; variable but technically this should be under defaults in the config.yml file.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;naming-posts-and-pagination&quot;&gt;Naming Posts and Pagination&lt;/h3&gt;
&lt;p&gt;When creating new posts you need to specify a certain format so that Jekyll can organize in order by date. The format goes &lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR-DAY-MONTH-Title-Of-Post-extension&lt;/code&gt; ex: 2106-03-31-AT&amp;amp;T-Dividend-King.md.&lt;/p&gt;

&lt;p&gt;I created a whole bunch of posts. As time goes on I will have hundreds of post that I can’t just display all at once so in order to post about 3 at a time we will use the built in pagination feature. First, we have to install the pagination gem via console so type &lt;code class=&quot;highlighter-rouge&quot;&gt;gem install jekyll-paginate&lt;/code&gt; and restart after.  Go to the config.yml file and under site settings add the line &lt;code class=&quot;highlighter-rouge&quot;&gt;paginate: 3;&lt;/code&gt; this will show 3 articles at a time. Under build settings add the line &lt;code class=&quot;highlighter-rouge&quot;&gt;gems: [jekyll-paginate]&lt;/code&gt; Go to the index.html file and in the for loop for posts replace site.posts with &lt;code class=&quot;highlighter-rouge&quot;&gt;paginator.posts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You should now see a list of the first 3 articles but we are missing the navigation for the rest of the articles and we have to write some code for this to work; luckily there is a template already written on the Jekyll docs page so &lt;a href=&quot;https://jekyllrb.com/docs/pagination/&quot;&gt;click this link&lt;/a&gt;. Copy the HTML snippet on the bottom and paste it right after the end of the ul tag in the index.html page. Refresh the page and you should now have a little pagination at the bottom&lt;/p&gt;

&lt;p&gt;I hope you enjoyed this post and congrats you now know the basics of creating a blog or website using Jekyll. Now try adding comments to your posts or hosting your blog on GitHub pages. See links below and please leave any comments below.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://help.disqus.com/customer/portal/articles/472138-jekyll-installation-instructions&quot;&gt;Comments&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/using-jekyll-as-a-static-site-generator-with-github-pages/&quot;&gt;Github pages&lt;/a&gt;&lt;/p&gt;

&lt;!-- links --&gt;
&lt;!-- pics --&gt;
</description>
        <pubDate>Fri, 08 Apr 2016 00:00:00 -0500</pubDate>
        <link>http://yourdomain.com/blog/programming/blog-with-jekyll</link>
        <guid isPermaLink="true">http://yourdomain.com/blog/programming/blog-with-jekyll</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 01 Apr 2016 11:41:03 -0500</pubDate>
        <link>http://yourdomain.com/blog/programming/welcome-to-jekyll</link>
        <guid isPermaLink="true">http://yourdomain.com/blog/programming/welcome-to-jekyll</guid>
        
        
        <category>programming</category>
        
      </item>
    
  </channel>
</rss>
